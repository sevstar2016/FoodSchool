version: "3.9"
services:
  db:
    image: postgres:16-alpine
    container_name: foodapi-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-food}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - ":5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      food_internal:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-food}"]
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    build: .
    container_name: foodapi-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-food}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      DEBUG: "false"
      JWT_SECRET: ${JWT_SECRET:-devsecret}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin}
      ADMIN_PHONE: ${ADMIN_PHONE:-0000000000}
      ADMIN_AVATAR_URL: ${ADMIN_AVATAR_URL:-}
    volumes:
      - ./:/app
    networks:
      food_internal:
      traefik:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.food-backend.tls=false"
      - "traefik.http.routers.food-backend.tls.options=default"
      - "traefik.http.routers.food-backend.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.food-backend.rule=Host(`food.se.215sozvezdie.ru`) && PathPrefix(`/api`)"
      - "traefik.http.services.food-backend.loadbalancer.server.port=8000"
      - "traefik.http.routers.food-backend.entryPoints=http,https"
      - "traefik.docker.network=traefik"

volumes:
  db_data:

networks:
  food_internal:
    internal: true
  traefik:
    external:
      name: traefik